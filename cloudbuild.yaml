steps:
  # Step 1: Clone the GitHub repository
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git clone https://github.com/th3-v3ng34nc3/AccuKnox-IaC-Scan-GCP.git /workspace/AccuKnox_Iac

  # Step 2: Install Checkov and run the scan, saving the report in JSON format
  - name: 'python:3.8'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install checkov && \
        checkov -d /workspace/AccuKnox_Iac --output json > /workspace/checkov_report.json || true
  # Step 4: Verify if results.json exists and handle appending new data with jq
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ ! -f /workspace/checkov_report.json ]; then
          echo '[]' > /workspace/checkov_report.json
        fi

  # Step 3: Access the secret using gcloud and save it to a file
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=accuknox_token --format='get(payload.data)' | tr '_-' '/+' | base64 -d > /workspace/decrypted-data.txt

# Step 4: Install jq and manipulate JSON using Java code snippet
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y jq && \
        if [ "." = "${directory}" ] && [ -z "${file}" ]; then \
          jq --arg repoLink "${repository}" --arg branch "${branch}" \
             '. += [{"details": {"repo": $repoLink, "branch": $branch}}]' \
             /workspace/checkov_report.json > /workspace/tmp.json && \
          mv /workspace/tmp.json /workspace/checkov_report.json; \
        else \
          echo '[' > /workspace/tmp.json && \
          cat /workspace/checkov_report.json >> /workspace/tmp.json && \
          echo ']' >> /workspace/tmp.json && \
          jq --arg repoLink "${repository}" --arg branch "${branch}" \
             '. += [{"details": {"repo": $repoLink, "branch": $branch}}]' \
             /workspace/tmp.json > /workspace/checkov_report.json && \
          rm /workspace/tmp.json; \
        fi

  # Step 6: Push report to CSPM panel
  - name: 'gcr.io/cloud-builders/curl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        curl --location --request POST "https://${_CSPM_URL}/api/v1/artifact/?tenant_id=${_TENANT_ID}&data_type=IAC&save_to_s3=false" \
          --header "Tenant-Id: ${_TENANT_ID}" \
          --header "Authorization: Bearer $(cat /workspace/decrypted-data.txt)" \
          --form "file=@/workspace/results.json"

# Artifacts to store the Checkov report
artifacts:
  objects:
    location: 'gs://aditya-cicd-test/checkov-reports/'
    paths: 
      - 'checkov_report.json'
      - 'results.json'  # Ensure results.json is included as an artifact

# Define substitutions
substitutions:
  _CSPM_URL: 'cspm.demo.accuknox.com'
  _TENANT_ID: '167'
  _BUCKET_NAME: 'gs://aditya-cicd-test'

# Define timeout for the entire pipeline
timeout: '1200s' # 20 minutes

logsBucket: 'gs://aditya-cicd-test'
